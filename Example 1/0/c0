/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1712                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0";
    object      c0;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];


internalField   uniform 0.0;

boundaryField
{
    INLET
    {
        type            codedMixed;
        refValue        uniform 2.86e-9;
        refGradient     uniform 0;
        valueFraction   uniform 0;

        name    Intletc0Coded;   

        code
	#{
		const fvMesh& mesh = this->patch().boundaryMesh().mesh();
    		const label inletLabel = mesh.boundaryMesh().findPatchID("INLET");
        	scalar sign = gSum(mesh.boundary()[inletLabel].lookupPatchField<volVectorField, vector>("U") & mesh.boundary()[inletLabel].Sf());
		if (sign>0.0)
		{
			this->valueFraction() = 0;
			this->refValue() = 0;
			this->refGrad() = 0;
		}
		else
		{
			this->valueFraction() = 1;
			this->refValue() = 2.86e-9;
			this->refGrad() = 0;
		};
      	#};
    }
    WALL
    {
   	type            codedFixedValue;
	value		uniform 0.0;

    	name robinBC;
    
    	code
    	#{
    		const scalar Vw = 4e-8;
   		const scalar gammac0 = 5.983e-12;
      		scalarField Cc = this->patchInternalField();
   		vectorField delta = this->patch().delta();
      		vectorField norm = this->patch().nf();
      		scalarField res = (Cc)/(1-mag(delta & norm)*Vw/gammac0);
      		operator == (res);
    	#};
    }  
    "OUTLET_[0-9]+"
    {
        type            codedMixed;
        refValue        uniform 2.86e-9;
        refGradient     uniform 0;
        valueFraction   uniform 0;

        name    Outletc0Coded;   

        code
	#{
		const fvMesh& mesh = this->patch().boundaryMesh().mesh();
    		const label inletLabel = mesh.boundaryMesh().findPatchID("INLET");
        	scalar sign = gSum(mesh.boundary()[inletLabel].lookupPatchField<volVectorField, vector>("U") & mesh.boundary()[inletLabel].Sf());
		if (sign<=0.0)
		{
			this->valueFraction() = 0;
			this->refValue() = 0;
			this->refGrad() = 0;
		}
		else
		{
			this->valueFraction() = 1;
			this->refValue() = 2.86e-9;
			this->refGrad() = 0;
		};
      	#};
    }
};

// ************************************************************************* //
