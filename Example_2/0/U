/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location	"0";
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    WALL
    {
	type 		noSlip;
    }


    INLET
    {
	type     codedFixedValue;
        value	 uniform (0 0 0);
 
        name PulsatilInlet;

	code
	#{
		scalar cardiacCycle = 0.8;
		scalar switchOn=0.0;			
		
		scalar t = this->db().time().value();
		scalar PI=3.141592653589793;
		const fvMesh& mesh = this->patch().boundaryMesh().mesh();
		const surfaceScalarField& magSf = mesh.magSf();
		const label inletLabel = mesh.boundaryMesh().findPatchID("INLET");
		const scalarField& inletAreas = magSf.boundaryField()[inletLabel];
    		scalar area = gSum(inletAreas);
		scalar areaAssumedDiameter=2*sqrt(area/PI);
		scalar meanVelocity=1.43*pow(areaAssumedDiameter, 2.55)/area;
		vectorField normals = this->patch().nf();
		scalar magnitudeVelocity;

		if (t >= switchOn)
		{
			t -= switchOn;
			magnitudeVelocity = meanVelocity*
			(1.0
		        -0.51083*cos((1*2*PI/cardiacCycle)*t)
		        +0.00933*sin((1*2*PI/cardiacCycle)*t)
		        -0.02449*cos((2*2*PI/cardiacCycle)*t)
		        -0.29734*sin((2*2*PI/cardiacCycle)*t)
		        +0.05868*cos((3*2*PI/cardiacCycle)*t)
		        +0.02950*sin((3*2*PI/cardiacCycle)*t)
		        );
		} else {
			magnitudeVelocity = meanVelocity;
		};
		vectorField& field = *this;
		forAll(normals,i)
		{
			field[i]=(-normals[i] * magnitudeVelocity);
		}	
	#};
    }

    OUTLET_1
    {
    	type codedFixedValue;
        value	 uniform (0 0 0);
 
        name PulsatilOutlet;

	code
	#{
		scalar PI=3.141592653589793;
		const fvMesh& mesh = this->patch().boundaryMesh().mesh();
		const surfaceScalarField& magSf = mesh.magSf();
    		const label inletLabel = mesh.boundaryMesh().findPatchID("INLET");
    		const label oppositePatchLabel = mesh.boundaryMesh().findPatchID("OUTLET_2");
    		const scalarField& inletAreas = magSf.boundaryField()[inletLabel];
    		const scalar inletPatchAreaTotal = gSum(inletAreas);
    		const scalar currentOutletPatchAreaTotal  = gSum(patch().magSf());
    		const scalar oppositeOutletPatchAreaTotal = gSum(magSf.boundaryField()[oppositePatchLabel]);
    		const scalar inletPatchAreaAssumedDiameter = 2*sqrt(inletPatchAreaTotal/PI);
		const scalar oppositeOutletPatchAssumedDiameter = 2*sqrt(oppositeOutletPatchAreaTotal/PI);
		const scalar currentOutletPatchAssumedDiameter = 2*sqrt(currentOutletPatchAreaTotal/PI);
    		const scalar q_opp_over_q_current = std::pow(oppositeOutletPatchAssumedDiameter/currentOutletPatchAssumedDiameter, 2.27);

		scalar t = this->db().time().value();
    		scalar inletPatchFlowRate;

		if (t==0.)
		{
			inletPatchFlowRate = 1.43*std::pow(inletPatchAreaAssumedDiameter, 2.55);
		} else {
			scalarField magInletVelocities = mag(mesh.boundary()[inletLabel].lookupPatchField<volVectorField, vector>("U"));
			inletPatchFlowRate = gSum(inletAreas*magInletVelocities);
		};
		
		scalar currentOutletPatchFlowRate = inletPatchFlowRate / (q_opp_over_q_current + 1.0);

    		scalar magnitudeVelocity = currentOutletPatchFlowRate/currentOutletPatchAreaTotal;
		
 		scalar sign = gSum(mesh.boundary()[inletLabel].lookupPatchField<volVectorField, vector>("U") & mesh.boundary()[inletLabel].Sf());
		
		if (sign>0.0)
		{
			magnitudeVelocity = -magnitudeVelocity;
		};
		
    		this->operator==(this->patch().nf() * magnitudeVelocity);
	#};
    }

    OUTLET_2
    {
        type            zeroGradient;
    }
}

// ************************************************************************* //
